
--- Script parsing start ---

  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  0] CBC_ASSIGN_LITERAL_SET_IDENT_BLOCK idx:2->ident(b) idx:1->ident(a)
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_NUMBER_1 number:2
  [  1] CBC_MULTIPLY_RIGHT_LITERAL idx:2->ident(b)
  [  0] CBC_ASSIGN_SET_IDENT_BLOCK idx:1->ident(a)
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  3] CBC_PUSH_THREE_LITERALS idx:1->ident(a) idx:3->string(x) idx:2->ident(b)
  [  0] CBC_ASSIGN_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  2] CBC_PUSH_TWO_LITERALS idx:1->ident(a) idx:3->string(x)
  [  3] CBC_PUSH_NUMBER_1 number:2
  [  3] CBC_MULTIPLY_RIGHT_LITERAL idx:2->ident(b)
  [  0] CBC_ASSIGN_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  3] CBC_PUSH_THREE_LITERALS idx:1->ident(a) idx:4->ident(x) idx:2->ident(b)
  [  0] CBC_ASSIGN_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  2] CBC_PUSH_TWO_LITERALS idx:1->ident(a) idx:4->ident(x)
  [  3] CBC_PUSH_NUMBER_1 number:2
  [  3] CBC_MULTIPLY_RIGHT_LITERAL idx:2->ident(b)
  [  0] CBC_ASSIGN_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  3] CBC_PUSH_THREE_LITERALS idx:1->ident(a) idx:3->string(x) idx:5->ident(c)
  [  3] CBC_ASSIGN_SET_IDENT_PUSH_RESULT idx:2->ident(b)
  [  0] CBC_ASSIGN_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:6->ident(f)
  [  1] CBC_CALL0_PUSH_RESULT
  [  2] CBC_EXT_PUSH_UNDEFINED_BASE
  [  3] CBC_PUSH_LITERAL idx:2->ident(b)
  [  0] CBC_ASSIGN_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  3] CBC_PUSH_IDENT_REFERENCE idx:1->ident(a)
  [  0] CBC_EXT_ASSIGN_MULTIPLY_LITERAL_BLOCK idx:2->ident(b)
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  3] CBC_PUSH_PROP_LITERAL_LITERAL_REFERENCE idx:1->ident(a) idx:3->string(x)
  [  0] CBC_EXT_ASSIGN_UNS_RIGHT_SHIFT_LITERAL_BLOCK idx:2->ident(b)
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  3] CBC_PUSH_PROP_LITERAL_LITERAL_REFERENCE idx:1->ident(a) idx:3->string(x)
  [  6] CBC_PUSH_IDENT_REFERENCE idx:2->ident(b)
  [  4] CBC_EXT_ASSIGN_ADD_LITERAL_PUSH_RESULT idx:7->ident(d)
  [  0] CBC_EXT_ASSIGN_MULTIPLY_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:1->ident(a)
  [  2] CBC_PUSH_NUMBER_1 number:2
  [  3] CBC_PUSH_NUMBER_1 number:3
  [  2] CBC_MULTIPLY
  [  3] CBC_PUSH_PROP_REFERENCE
  [  4] CBC_PUSH_LITERAL idx:6->ident(f)
  [  4] CBC_CALL0_PUSH_RESULT
  [  5] CBC_EXT_PUSH_UNDEFINED_BASE
  [  6] CBC_PUSH_PROP_REFERENCE
  [  7] CBC_PUSH_LITERAL idx:6->ident(f)
  [  7] CBC_CALL0_PUSH_RESULT
  [  4] CBC_EXT_ASSIGN_SUBTRACT_PUSH_RESULT
  [  0] CBC_EXT_ASSIGN_DIVIDE_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_PROP_THIS_LITERAL idx:8->string(b)
  [  2] CBC_PUSH_LITERAL idx:6->ident(f)
  [  4] CBC_PUSH_THIS_LITERAL idx:2->ident(b)
  [  2] CBC_CALL2_PUSH_RESULT
  [  1] CBC_ADD
  [  0] CBC_ASSIGN_SET_IDENT_BLOCK idx:4->ident(x)
  [  1] CBC_PUSH_PROP_THIS_LITERAL idx:2->ident(b)
  [  0] CBC_ASSIGN_SET_IDENT_BLOCK idx:4->ident(x)
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_NUMBER_1 number:6
  [  0] CBC_ASSIGN_PROP_THIS_LITERAL_BLOCK idx:9->string(a)
  [  2] CBC_PUSH_THIS_LITERAL idx:1->ident(a)
  [  3] CBC_PUSH_NUMBER_1 number:7
  [  0] CBC_ASSIGN_BLOCK
  [  3] CBC_PUSH_PROP_THIS_LITERAL_REFERENCE idx:9->string(a)
  [  6] CBC_PUSH_PROP_THIS_LITERAL_REFERENCE idx:10->string(f)
  [  4] CBC_CALL0_PROP_PUSH_RESULT
  [  0] CBC_EXT_ASSIGN_ADD_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:2->ident(b)
  [  3] CBC_EXT_FOR_IN_CREATE_CONTEXT
  [  5] CBC_PUSH_THIS_LITERAL idx:9->string(a)
  [  6] CBC_EXT_FOR_IN_GET_NEXT
  [  3] CBC_ASSIGN
  [  0] CBC_EXT_BRANCH_IF_FOR_IN_HAS_NEXT
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:11->ident(String)
  [  2] CBC_POST_INCR_IDENT_PUSH_RESULT idx:12->ident(i)
  [  0] CBC_CALL1_BLOCK
  [  2] CBC_PUSH_TWO_LITERALS idx:11->ident(String) idx:1->ident(a)
  [  3] CBC_PRE_INCR_IDENT_PUSH_RESULT idx:12->ident(i)
  [  0] CBC_CALL2_BLOCK
  [  2] CBC_PUSH_TWO_LITERALS idx:11->ident(String) idx:13->ident(args)
  [  3] CBC_POST_INCR_IDENT_PUSH_RESULT idx:12->ident(i)
  [  2] CBC_PUSH_PROP
  [  0] CBC_CALL1_BLOCK
  [  3] CBC_PUSH_THREE_LITERALS idx:11->ident(String) idx:1->ident(a) idx:14->number(10000)
  [  4] CBC_EXT_PUSH_UNDEFINED_BASE
  [  3] CBC_POST_DECR_PUSH_RESULT
  [  0] CBC_CALL2_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  2] CBC_PUSH_TWO_LITERALS idx:11->ident(String) idx:15->ident(j)
  [  2] CBC_ASSIGN_SET_IDENT_PUSH_RESULT idx:12->ident(i)
  [  0] CBC_CALL1_BLOCK
  [  3] CBC_PUSH_THREE_LITERALS idx:11->ident(String) idx:1->ident(a) idx:15->ident(j)
  [  3] CBC_ASSIGN_SET_IDENT_PUSH_RESULT idx:12->ident(i)
  [  0] CBC_CALL2_BLOCK
  [  3] CBC_PUSH_THREE_LITERALS idx:11->ident(String) idx:1->ident(a) idx:16->ident(k)
  [  3] CBC_ASSIGN_SET_IDENT_PUSH_RESULT idx:15->ident(j)
  [  3] CBC_ASSIGN_SET_IDENT_PUSH_RESULT idx:12->ident(i)
  [  0] CBC_CALL2_BLOCK
  [  3] CBC_PUSH_THREE_LITERALS idx:11->ident(String) idx:1->ident(a) idx:17->number(10000)
  [  4] CBC_EXT_PUSH_UNDEFINED_BASE
  [  5] CBC_ASSIGN_LITERAL_SET_IDENT_PUSH_RESULT idx:16->ident(k) idx:15->ident(j)
  [  3] CBC_ASSIGN_PUSH_RESULT
  [  0] CBC_CALL2_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:11->ident(String)
  [  4] CBC_PUSH_IDENT_REFERENCE idx:12->ident(i)
  [  2] CBC_EXT_ASSIGN_ADD_LITERAL_PUSH_RESULT idx:2->ident(b)
  [  0] CBC_CALL1_BLOCK
  [  2] CBC_PUSH_TWO_LITERALS idx:11->ident(String) idx:1->ident(a)
  [  5] CBC_PUSH_IDENT_REFERENCE idx:12->ident(i)
  [  3] CBC_EXT_ASSIGN_DIVIDE_LITERAL_PUSH_RESULT idx:2->ident(b)
  [  0] CBC_CALL2_BLOCK
  [  2] CBC_PUSH_TWO_LITERALS idx:11->ident(String) idx:1->ident(a)
  [  5] CBC_PUSH_IDENT_REFERENCE idx:12->ident(i)
  [  8] CBC_PUSH_IDENT_REFERENCE idx:15->ident(j)
  [  6] CBC_EXT_ASSIGN_SUBTRACT_LITERAL_PUSH_RESULT idx:16->ident(k)
  [  3] CBC_EXT_ASSIGN_RIGHT_SHIFT_PUSH_RESULT
  [  0] CBC_CALL2_BLOCK
  [  3] CBC_PUSH_THREE_LITERALS idx:11->ident(String) idx:1->ident(a) idx:18->number(10000)
  [  4] CBC_EXT_PUSH_UNDEFINED_BASE
  [  5] CBC_PUSH_PROP_REFERENCE
  [  8] CBC_PUSH_IDENT_REFERENCE idx:15->ident(j)
  [  6] CBC_EXT_ASSIGN_SUBTRACT_LITERAL_PUSH_RESULT idx:16->ident(k)
  [  3] CBC_EXT_ASSIGN_RIGHT_SHIFT_PUSH_RESULT
  [  0] CBC_CALL2_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK

Final byte code dump:

  Maximum stack depth: 8
  Flags: [small_lit_enc]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 12
  Const literal range end: 19
  Literal range end: 19

   0 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
   2 : CBC_POP_BLOCK
   3 : CBC_ASSIGN_LITERAL_SET_IDENT_BLOCK idx:2(ident)->ident(b) idx:1(ident)->ident(a)
   6 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
   8 : CBC_POP_BLOCK
   9 : CBC_PUSH_NUMBER_1 number:2
  11 : CBC_MULTIPLY_RIGHT_LITERAL idx:2(ident)->ident(b)
  13 : CBC_ASSIGN_SET_IDENT_BLOCK idx:1(ident)->ident(a)
  15 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
  17 : CBC_POP_BLOCK
  18 : CBC_PUSH_THREE_LITERALS idx:1(ident)->ident(a) idx:12(lit)->string(x) idx:2(ident)->ident(b)
  22 : CBC_ASSIGN_BLOCK
  23 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
  25 : CBC_POP_BLOCK
  26 : CBC_PUSH_TWO_LITERALS idx:1(ident)->ident(a) idx:12(lit)->string(x)
  29 : CBC_PUSH_NUMBER_1 number:2
  31 : CBC_MULTIPLY_RIGHT_LITERAL idx:2(ident)->ident(b)
  33 : CBC_ASSIGN_BLOCK
  34 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
  36 : CBC_POP_BLOCK
  37 : CBC_PUSH_THREE_LITERALS idx:1(ident)->ident(a) idx:3(ident)->ident(x) idx:2(ident)->ident(b)
  41 : CBC_ASSIGN_BLOCK
  42 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
  44 : CBC_POP_BLOCK
  45 : CBC_PUSH_TWO_LITERALS idx:1(ident)->ident(a) idx:3(ident)->ident(x)
  48 : CBC_PUSH_NUMBER_1 number:2
  50 : CBC_MULTIPLY_RIGHT_LITERAL idx:2(ident)->ident(b)
  52 : CBC_ASSIGN_BLOCK
  53 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
  55 : CBC_POP_BLOCK
  56 : CBC_PUSH_THREE_LITERALS idx:1(ident)->ident(a) idx:12(lit)->string(x) idx:4(ident)->ident(c)
  60 : CBC_ASSIGN_SET_IDENT_PUSH_RESULT idx:2(ident)->ident(b)
  62 : CBC_ASSIGN_BLOCK
  63 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
  65 : CBC_POP_BLOCK
  66 : CBC_PUSH_LITERAL idx:5(ident)->ident(f)
  68 : CBC_CALL0_PUSH_RESULT
  69 : CBC_EXT_PUSH_UNDEFINED_BASE
  71 : CBC_PUSH_LITERAL idx:2(ident)->ident(b)
  73 : CBC_ASSIGN_BLOCK
  74 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
  76 : CBC_POP_BLOCK
  77 : CBC_PUSH_IDENT_REFERENCE idx:1(ident)->ident(a)
  79 : CBC_EXT_ASSIGN_MULTIPLY_LITERAL_BLOCK idx:2(ident)->ident(b)
  82 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
  84 : CBC_POP_BLOCK
  85 : CBC_PUSH_PROP_LITERAL_LITERAL_REFERENCE idx:1(ident)->ident(a) idx:12(lit)->string(x)
  88 : CBC_EXT_ASSIGN_UNS_RIGHT_SHIFT_LITERAL_BLOCK idx:2(ident)->ident(b)
  91 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
  93 : CBC_POP_BLOCK
  94 : CBC_PUSH_PROP_LITERAL_LITERAL_REFERENCE idx:1(ident)->ident(a) idx:12(lit)->string(x)
  97 : CBC_PUSH_IDENT_REFERENCE idx:2(ident)->ident(b)
  99 : CBC_EXT_ASSIGN_ADD_LITERAL_PUSH_RESULT idx:6(ident)->ident(d)
 102 : CBC_EXT_ASSIGN_MULTIPLY_BLOCK
 104 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
 106 : CBC_POP_BLOCK
 107 : CBC_PUSH_LITERAL idx:1(ident)->ident(a)
 109 : CBC_PUSH_NUMBER_1 number:2
 111 : CBC_PUSH_NUMBER_1 number:3
 113 : CBC_MULTIPLY
 114 : CBC_PUSH_PROP_REFERENCE
 115 : CBC_PUSH_LITERAL idx:5(ident)->ident(f)
 117 : CBC_CALL0_PUSH_RESULT
 118 : CBC_EXT_PUSH_UNDEFINED_BASE
 120 : CBC_PUSH_PROP_REFERENCE
 121 : CBC_PUSH_LITERAL idx:5(ident)->ident(f)
 123 : CBC_CALL0_PUSH_RESULT
 124 : CBC_EXT_ASSIGN_SUBTRACT_PUSH_RESULT
 126 : CBC_EXT_ASSIGN_DIVIDE_BLOCK
 128 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
 130 : CBC_POP_BLOCK
 131 : CBC_PUSH_PROP_THIS_LITERAL idx:13(lit)->string(b)
 133 : CBC_PUSH_LITERAL idx:5(ident)->ident(f)
 135 : CBC_PUSH_THIS_LITERAL idx:2(ident)->ident(b)
 137 : CBC_CALL2_PUSH_RESULT
 138 : CBC_ADD
 139 : CBC_ASSIGN_SET_IDENT_BLOCK idx:3(ident)->ident(x)
 141 : CBC_PUSH_PROP_THIS_LITERAL idx:2(ident)->ident(b)
 143 : CBC_ASSIGN_SET_IDENT_BLOCK idx:3(ident)->ident(x)
 145 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
 147 : CBC_POP_BLOCK
 148 : CBC_PUSH_NUMBER_1 number:6
 150 : CBC_ASSIGN_PROP_THIS_LITERAL_BLOCK idx:14(lit)->string(a)
 152 : CBC_PUSH_THIS_LITERAL idx:1(ident)->ident(a)
 154 : CBC_PUSH_NUMBER_1 number:7
 156 : CBC_ASSIGN_BLOCK
 157 : CBC_PUSH_PROP_THIS_LITERAL_REFERENCE idx:14(lit)->string(a)
 159 : CBC_PUSH_PROP_THIS_LITERAL_REFERENCE idx:15(lit)->string(f)
 161 : CBC_CALL0_PROP_PUSH_RESULT
 162 : CBC_EXT_ASSIGN_ADD_BLOCK
 164 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
 166 : CBC_POP_BLOCK
 167 : CBC_PUSH_LITERAL idx:2(ident)->ident(b)
 169 : CBC_EXT_FOR_IN_CREATE_CONTEXT offset:11(->180)
 172 : CBC_PUSH_THIS_LITERAL idx:14(lit)->string(a)
 174 : CBC_EXT_FOR_IN_GET_NEXT
 176 : CBC_ASSIGN
 177 : CBC_EXT_BRANCH_IF_FOR_IN_HAS_NEXT offset:5(->172)
 180 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
 182 : CBC_POP_BLOCK
 183 : CBC_PUSH_LITERAL idx:7(ident)->ident(String)
 185 : CBC_POST_INCR_IDENT_PUSH_RESULT idx:8(ident)->ident(i)
 187 : CBC_CALL1_BLOCK
 188 : CBC_PUSH_TWO_LITERALS idx:7(ident)->ident(String) idx:1(ident)->ident(a)
 191 : CBC_PRE_INCR_IDENT_PUSH_RESULT idx:8(ident)->ident(i)
 193 : CBC_CALL2_BLOCK
 194 : CBC_PUSH_TWO_LITERALS idx:7(ident)->ident(String) idx:9(ident)->ident(args)
 197 : CBC_POST_INCR_IDENT_PUSH_RESULT idx:8(ident)->ident(i)
 199 : CBC_PUSH_PROP
 200 : CBC_CALL1_BLOCK
 201 : CBC_PUSH_THREE_LITERALS idx:7(ident)->ident(String) idx:1(ident)->ident(a) idx:16(lit)->number(10000)
 205 : CBC_EXT_PUSH_UNDEFINED_BASE
 207 : CBC_POST_DECR_PUSH_RESULT
 208 : CBC_CALL2_BLOCK
 209 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
 211 : CBC_POP_BLOCK
 212 : CBC_PUSH_TWO_LITERALS idx:7(ident)->ident(String) idx:10(ident)->ident(j)
 215 : CBC_ASSIGN_SET_IDENT_PUSH_RESULT idx:8(ident)->ident(i)
 217 : CBC_CALL1_BLOCK
 218 : CBC_PUSH_THREE_LITERALS idx:7(ident)->ident(String) idx:1(ident)->ident(a) idx:10(ident)->ident(j)
 222 : CBC_ASSIGN_SET_IDENT_PUSH_RESULT idx:8(ident)->ident(i)
 224 : CBC_CALL2_BLOCK
 225 : CBC_PUSH_THREE_LITERALS idx:7(ident)->ident(String) idx:1(ident)->ident(a) idx:11(ident)->ident(k)
 229 : CBC_ASSIGN_SET_IDENT_PUSH_RESULT idx:10(ident)->ident(j)
 231 : CBC_ASSIGN_SET_IDENT_PUSH_RESULT idx:8(ident)->ident(i)
 233 : CBC_CALL2_BLOCK
 234 : CBC_PUSH_THREE_LITERALS idx:7(ident)->ident(String) idx:1(ident)->ident(a) idx:17(lit)->number(10000)
 238 : CBC_EXT_PUSH_UNDEFINED_BASE
 240 : CBC_ASSIGN_LITERAL_SET_IDENT_PUSH_RESULT idx:11(ident)->ident(k) idx:10(ident)->ident(j)
 243 : CBC_ASSIGN_PUSH_RESULT
 244 : CBC_CALL2_BLOCK
 245 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
 247 : CBC_POP_BLOCK
 248 : CBC_PUSH_LITERAL idx:7(ident)->ident(String)
 250 : CBC_PUSH_IDENT_REFERENCE idx:8(ident)->ident(i)
 252 : CBC_EXT_ASSIGN_ADD_LITERAL_PUSH_RESULT idx:2(ident)->ident(b)
 255 : CBC_CALL1_BLOCK
 256 : CBC_PUSH_TWO_LITERALS idx:7(ident)->ident(String) idx:1(ident)->ident(a)
 259 : CBC_PUSH_IDENT_REFERENCE idx:8(ident)->ident(i)
 261 : CBC_EXT_ASSIGN_DIVIDE_LITERAL_PUSH_RESULT idx:2(ident)->ident(b)
 264 : CBC_CALL2_BLOCK
 265 : CBC_PUSH_TWO_LITERALS idx:7(ident)->ident(String) idx:1(ident)->ident(a)
 268 : CBC_PUSH_IDENT_REFERENCE idx:8(ident)->ident(i)
 270 : CBC_PUSH_IDENT_REFERENCE idx:10(ident)->ident(j)
 272 : CBC_EXT_ASSIGN_SUBTRACT_LITERAL_PUSH_RESULT idx:11(ident)->ident(k)
 275 : CBC_EXT_ASSIGN_RIGHT_SHIFT_PUSH_RESULT
 277 : CBC_CALL2_BLOCK
 278 : CBC_PUSH_THREE_LITERALS idx:7(ident)->ident(String) idx:1(ident)->ident(a) idx:18(lit)->number(10000)
 282 : CBC_EXT_PUSH_UNDEFINED_BASE
 284 : CBC_PUSH_PROP_REFERENCE
 285 : CBC_PUSH_IDENT_REFERENCE idx:10(ident)->ident(j)
 287 : CBC_EXT_ASSIGN_SUBTRACT_LITERAL_PUSH_RESULT idx:11(ident)->ident(k)
 290 : CBC_EXT_ASSIGN_RIGHT_SHIFT_PUSH_RESULT
 292 : CBC_CALL2_BLOCK
 293 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
 295 : CBC_POP_BLOCK
 296 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 297 bytes

Script parsing successfully completed. Total byte code size: 297 bytes

--- Script parsing end ---

