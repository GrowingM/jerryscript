
--- Script parsing start ---

  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  3] CBC_EXT_TRY_CREATE_CONTEXT
  [  4] CBC_PUSH_LITERAL idx:1->ident(x)
  [  3] CBC_CALL0_BLOCK
  [  3] CBC_EXT_FINALLY
  [  4] CBC_PUSH_LITERAL idx:1->ident(x)
  [  3] CBC_CALL0_BLOCK
  [  0] CBC_CONTEXT_END
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  3] CBC_EXT_TRY_CREATE_CONTEXT
  [  4] CBC_PUSH_LITERAL idx:1->ident(x)
  [  3] CBC_CALL0_BLOCK
  [  4] CBC_EXT_CATCH
  [  3] CBC_ASSIGN_SET_IDENT idx:2->ident(exc)
  [  4] CBC_PUSH_LITERAL idx:1->ident(x)
  [  3] CBC_CALL0_BLOCK
  [  3] CBC_EXT_FINALLY
  [  4] CBC_PUSH_LITERAL idx:1->ident(x)
  [  3] CBC_CALL0_BLOCK
  [  0] CBC_CONTEXT_END
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  3] CBC_EXT_TRY_CREATE_CONTEXT
  [  4] CBC_PUSH_LITERAL idx:1->ident(x)
  [  3] CBC_CALL0_BLOCK
  [  4] CBC_EXT_CATCH
  [  3] CBC_ASSIGN_SET_IDENT idx:2->ident(exc)
  [  4] CBC_PUSH_LITERAL idx:1->ident(x)
  [  3] CBC_CALL0_BLOCK
  [  0] CBC_CONTEXT_END
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  0] CBC_JUMP_FORWARD
  [  3] CBC_EXT_TRY_CREATE_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  4] CBC_EXT_CATCH
  [  3] CBC_ASSIGN_SET_IDENT idx:3->ident(evall)
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_EXT_FINALLY
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  0] CBC_CONTEXT_END
  [  1] CBC_PUSH_FALSE
  [  0] CBC_BRANCH_IF_TRUE_BACKWARD
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK

Final byte code dump:

  Maximum stack depth: 4
  Flags: [small_lit_enc]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 4
  Const literal range end: 4
  Literal range end: 4

   0 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
   2 : CBC_POP_BLOCK
   3 : CBC_EXT_TRY_CREATE_CONTEXT offset:6(->9)
   6 : CBC_PUSH_LITERAL idx:1(ident)->ident(x)
   8 : CBC_CALL0_BLOCK
   9 : CBC_EXT_FINALLY offset:7(->16)
  12 : CBC_PUSH_LITERAL idx:1(ident)->ident(x)
  14 : CBC_CALL0_BLOCK
  15 : CBC_CONTEXT_END
  16 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
  18 : CBC_POP_BLOCK
  19 : CBC_EXT_TRY_CREATE_CONTEXT offset:6(->25)
  22 : CBC_PUSH_LITERAL idx:1(ident)->ident(x)
  24 : CBC_CALL0_BLOCK
  25 : CBC_EXT_CATCH offset:8(->33)
  28 : CBC_ASSIGN_SET_IDENT idx:2(ident)->ident(exc)
  30 : CBC_PUSH_LITERAL idx:1(ident)->ident(x)
  32 : CBC_CALL0_BLOCK
  33 : CBC_EXT_FINALLY offset:7(->40)
  36 : CBC_PUSH_LITERAL idx:1(ident)->ident(x)
  38 : CBC_CALL0_BLOCK
  39 : CBC_CONTEXT_END
  40 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
  42 : CBC_POP_BLOCK
  43 : CBC_EXT_TRY_CREATE_CONTEXT offset:6(->49)
  46 : CBC_PUSH_LITERAL idx:1(ident)->ident(x)
  48 : CBC_CALL0_BLOCK
  49 : CBC_EXT_CATCH offset:8(->57)
  52 : CBC_ASSIGN_SET_IDENT idx:2(ident)->ident(exc)
  54 : CBC_PUSH_LITERAL idx:1(ident)->ident(x)
  56 : CBC_CALL0_BLOCK
  57 : CBC_CONTEXT_END
  58 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
  60 : CBC_POP_BLOCK
  61 : CBC_JUMP_FORWARD offset:38(->99)
  63 : CBC_EXT_TRY_CREATE_CONTEXT offset:11(->74)
  66 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:33(->99)
  68 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:31(->99)
  70 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:32(->102)
  72 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:30(->102)
  74 : CBC_EXT_CATCH offset:13(->87)
  77 : CBC_ASSIGN_SET_IDENT idx:3(ident)->ident(evall)
  79 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:20(->99)
  81 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:18(->99)
  83 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:19(->102)
  85 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:17(->102)
  87 : CBC_EXT_FINALLY offset:12(->99)
  90 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:9(->99)
  92 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:7(->99)
  94 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:8(->102)
  96 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:6(->102)
  98 : CBC_CONTEXT_END
  99 : CBC_PUSH_FALSE
 100 : CBC_BRANCH_IF_TRUE_BACKWARD offset:37(->63)
 102 : CBC_PUSH_LITERAL idx:0(ident)->ident(next_statement)
 104 : CBC_POP_BLOCK
 105 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 106 bytes

Script parsing successfully completed. Total byte code size: 106 bytes

--- Script parsing end ---

